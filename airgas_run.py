# -*- coding: utf-8 -*-
"""AIRGAS Run.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YIyGM4Is7wWSvOdstHco8jG4Ex5Dt5rt
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import xgboost as xg 
from xgboost import plot_importance, plot_tree
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, mean_absolute_error
from sklearn import preprocessing

from google.colab import drive
drive.mount('/content/drive', force_remount=True)

df = pd.read_csv("drive/My Drive/AIRGAS/Superstore2.csv")

df.columns = df.columns.str.replace(' ','_')

df['Order_Date'] = pd.to_datetime(df['Order_Date'])

df["Ship_Date"] = pd.to_datetime(df["Ship_Date"])

df = df.sort_values("Order_Date")

df["Day"] = df['Order_Date'].map(lambda x: x.day)
df["Month"] = df['Order_Date'].map(lambda x: x.month)
df["Year"] = df['Order_Date'].map(lambda x: x.year)

lbl = preprocessing.LabelEncoder()
df['Region'] = lbl.fit_transform(df['Region'].astype(str))
df['Product_ID'] = lbl.fit_transform(df['Product_ID'].astype(str))
df['Ship_Mode'] = lbl.fit_transform(df['Ship_Mode'].astype(str))
df['Customer_ID'] = lbl.fit_transform(df['Customer_ID'].astype(str))
df['Segment'] = lbl.fit_transform(df['Segment'].astype(str))
df['Country'] = lbl.fit_transform(df['Country'].astype(str))
df['City'] = lbl.fit_transform(df['City'].astype(str))
df['State'] = lbl.fit_transform(df['State'].astype(str))

def head_split(dataset, percentage):
  return dataset.head(int(len(dataset)*percentage))

def tail_split(dataset, percentage):
  return dataset.tail(int(len(dataset)*percentage))

df_train = head_split(df, .8)

df_test = tail_split(df, .2)

def create_features(df, label=None):
    df['Order_Date'] = df.index
    df['Month'] = df.Month
    df['Day'] = df.Day
    df['Year'] = df.Year
    df['Product_ID'] = df.Product_ID
    df['Region'] = df.Region
    df['Ship_Mode'] = df.Ship_Mode
    df['Segment'] = df.Segment
    df['Country'] = df.Country
    df['City'] = df.City
    df['State'] = df.State

    X = df[['Day','Month','Year','Product_ID','Region','Ship_Mode','Segment','Country','State']]
    if label:
        y = df[label]
        return X, y
    return X

X_train, y_train = create_features(df_train, label='Sales')
X_test, y_test = create_features(df_test, label='Sales')
X_train

reg = xg.XGBRegressor(n_estimators=1500)

reg.fit(X_train, y_train,
        eval_set=[(X_train, y_train), (X_test, y_test)],
        early_stopping_rounds=50,
       verbose=False)

output = plot_importance(reg, height=0.9)

df_test['Sales_Prediction'] = reg.predict(X_test)
results = pd.concat([df_test, df_train], sort=False)

results = results.reset_index()

results = results.drop("index", axis =1)

results = results.drop("Row_ID", axis =1)

results.head(1999)

results2 = results.iloc[:1998]

results2

mean_squared_error(df_test.Sales,results2.Sales_Prediction)

output = results2[['Sales','Sales_Prediction']].plot(figsize=(15, 5))